{"version":3,"sources":["components/common/listGroup.jsx","components/common/pagination.jsx","utils/paginate.js","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/like.jsx","components/common/disLike.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/searchBox.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/moviesForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["ListGroup","this","props","items","textProperty","valueProperty","selectedItem","onItemSelect","className","map","item","style","cursor","onClick","key","Component","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","page","paginate","pageNumber","startIndex","slice","take","value","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","movieUrl","id","apiEndPoint","deleteMovie","http","saveMovie","movie","_id","body","getGenres","Like","classesName","liked","aria-hidden","DisLike","name","disLiked","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","label","TableBody","content","data","renderCell","Table","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","Link","to","title","onLike","onDisLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","SearchBox","onChange","type","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handleDisLike","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","fontWeight","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","Input","errors","rest","htmlFor","Select","options","option","Form","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","renderInput","renderSelect","renderButton","disabled","MoviesForm","genreId","numberInStock","dailyRentalRate","string","required","number","integer","min","max","history","movieId","match","params","mapToViewModel","replace","populateGenre","populateMovie","onSubmit","LoginForm","username","location","window","from","pathname","Redirect","register","RegisterForm","minDomainSegments","tlds","allow","userService","Logout","ProtectedRoute","component","render","Route","App","Switch","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3bbd29aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ListGroup extends Component {\r\n  render() {\r\n    const {\r\n      items,\r\n      textProperty,\r\n      valueProperty,\r\n      selectedItem,\r\n      onItemSelect,\r\n    } = this.props;\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {items.map((item) => (\r\n          <li\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => onItemSelect(item)}\r\n            key={item[valueProperty]}\r\n            className={\r\n              item === selectedItem\r\n                ? \"list-group-item active\"\r\n                : \"list-group-item\"\r\n            }\r\n          >\r\n            {item[textProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\nListGroup.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  textProperty: PropTypes.string.isRequired,\r\n  valueProperty: PropTypes.string.isRequired,\r\n  selectedItem: PropTypes.string,\r\n  onItemSelect: PropTypes.func.isRequired,\r\n};\r\nexport default ListGroup;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nclass Pagination extends Component {\r\n  render() {\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = this.props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    const pages = _.range(1, pagesCount + 1);\r\n    if (pagesCount === 1) return null;\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {pages.map((page) => (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n            >\r\n              <a\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"page-link\"\r\n                onClick={() => onPageChange(page)}\r\n              >\r\n                {page}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","// import * as Sentry from \"@sentry/react\";\r\n// import { Integrations } from \"@sentry/tracing\";\r\n\r\nfunction init() {\r\n  // Sentry.init({\r\n  //   dsn:\r\n  //     \"https://d712462a79034f81b333a5d5407f5911@o440913.ingest.sentry.io/5410630\",\r\n  //   integrations: [new Integrations.BrowserTracing()],\r\n  //   tracesSampleRate: 1.0,\r\n  // });\r\n}\r\n\r\nfunction log(error) {\r\n  // Sentry.captureException(error);\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status <= 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurred\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt){\r\n  axios.defaults.headers.common['x-auth-token'] = jwt;\r\n\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint =  \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return apiEndPoint + \"/\" + id;\r\n}\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  return http.delete(movieUrl(id));\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return http.get(movieUrl(id));\r\n}\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n","import http from \"./httpService\";\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Like extends Component {\r\n  render() {\r\n    const { onClick, liked } = this.props;\r\n    let classesName = \"fa fa-heart\";\r\n    if (!liked) classesName += \"-o\";\r\n    return <i onClick={onClick} className={classesName} aria-hidden=\"true\"></i>;\r\n  }\r\n}\r\nLike.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  liked: PropTypes.bool,\r\n};\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass DisLike extends Component {\r\n  render() {\r\n    const { onClick, disLiked } = this.props;\r\n    let name = \"fa fa-thumbs\";\r\n    if (!disLiked) name += \"-o-down\";\r\n    else name += \"-down\";\r\n    return <i onClick={onClick} className={name} aria-hidden=\"true\"></i>;\r\n  }\r\n}\r\nDisLike.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  disLiked: PropTypes.bool,\r\n};\r\nexport default DisLike;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (path === sortColumn.path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              style={{ cursor: \"pointer\" }}\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nTableHeader.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  sortColumn: PropTypes.object.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell(item, column) {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  }\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={item._id + (column.path || column.key)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n};\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\nclass Table extends Component {\r\n  render() {\r\n    const { columns, onSort, sortColumn, data } = this.props;\r\n    return (\r\n      <table className=\"table\">\r\n        <TableHeader\r\n          columns={columns}\r\n          onSort={onSort}\r\n          sortColumn={sortColumn}\r\n        />\r\n        <TableBody data={data} columns={columns} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nTable.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  sortColumn: PropTypes.object.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n};\r\nexport default Table;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndPoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n   const {data: jwt} = await http.post(apiEndPoint, {email, password});\r\n   localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\nexport function logout(){\r\n    localStorage.removeItem(tokenKey);\r\n}\r\nexport function getCurrentUser(){\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n      } catch (ex) {\r\n          return null;\r\n      }\r\n}\r\n\r\nexport function getJwt(){\r\n    return localStorage.getItem(tokenKey)\r\n}\r\n\r\nexport default {\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrentUser,\r\n    getJwt\r\n}","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport DisLike from \"./common/disLike\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from '../services/authService';\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"Like\",\r\n      content: (movie) => (\r\n        <button className=\"btn btn-default btn-sm\">\r\n          <Like onClick={() => this.props.onLike(movie)} liked={movie.liked} />\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      key: \"DisLike\",\r\n      content: (movie) => (\r\n        <button className=\"btn btn-default btn-sm\">\r\n          <DisLike\r\n            onClick={() => this.props.onDisLike(movie)}\r\n            disLiked={movie.disLiked}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"Delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor(){\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin)\r\n      this.columns.push(this.deleteColumn)\r\n  }\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n        data={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React, { Component } from \"react\";\r\nclass SearchBox extends Component {\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        name=\"query\"\r\n        className=\"form-control my-3\"\r\n        placeholder=\"Search...\"\r\n        value={value}\r\n        onChange={(e) => onChange(e.currentTarget.value)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport { getMovies, deleteMovie } from \"./../services/movieService\";\r\nimport { getGenres } from \"./../services/genreService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ name: \"All Genres\", _id: \"\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted.\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...this.state.movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n  handleDisLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...this.state.movies[index] };\r\n    movies[index].disLiked = !movies[index].disLiked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      currentPage,\r\n      searchQuery,\r\n      sortColumn,\r\n    } = this.state;\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const {user} = this.props\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (<Link\r\n            to=\"/movies/new\"\r\n            className=\"btn btn-primary\"\r\n            style={{ marginBottom: 20 }}\r\n          >\r\n            New Movie\r\n          </Link>)}\r\n          <p style={{ fontWeight: \"bold\" }}>\r\n            Showing {totalCount} movies in the database\r\n          </p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDisLike={this.handleDisLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Customers extends Component {\r\n  render() {\r\n    return <h1>Customers</h1>;\r\n  }\r\n}\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Rentals extends Component {\r\n  render() {\r\n    return <h1>Rentals</h1>;\r\n  }\r\n}\r\n\r\nexport default Rentals;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return <h1>Not Found</h1>;\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const {user} = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Movie\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item \">\r\n              <NavLink className=\"nav-link\" to=\"/movies\">\r\n                Movies <span className=\"sr-only\">(current)</span>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/customers\">\r\n                Customers\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/rentals\">\r\n                Rentals\r\n              </NavLink>\r\n            </li>\r\n            {!user &&\r\n            (<React.Fragment>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </li>\r\n            </React.Fragment> )}\r\n            {user &&\r\n            (<React.Fragment>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </li>\r\n            </React.Fragment> )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    const { name, label, errors, ...rest } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input {...rest} name={name} id={name} className=\"form-control\" />\r\n        {errors && <div className=\"alert alert-danger\">{errors}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Select extends Component {\r\n  render() {\r\n    const { name, label, options, errors, ...rest } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <select name={name} id={name} {...rest} className=\"form-control\">\r\n          <option value=\"\" />\r\n          {options.map((option) => (\r\n            <option key={option._id} value={option._id}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors && <div className=\"alert alert-danger\">{errors}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    //properties of data are the data that we need to render label and input field accordingly\r\n    data: {},\r\n    // errors will happen of input field\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    // its gonna list all the errors of all input field\r\n    const options = { abortEarly: false };\r\n    // destructuring\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    // set value for errors property\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  handleSubmit = (e) => {\r\n    // this action will prevent page from reloading again\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    // this action will prevent the case that if there is no errors, the errors object will be an empty\r\n    // object, not a null\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n  // destructuring the currentTarget property of an event function and change its name to input\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    // set the errors for every input field dynamically\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    // set the data for every input field dynamically\r\n\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n  renderInput = (name, label, type = \"text\") => {\r\n    // get data from the state, therefore, if data's property's value is not \"\", the initial value of\r\n    // input field will be the same. For example, if username: '1', the input field of username will be\r\n    // initially set to 1\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        errors={errors[name]}\r\n      />\r\n    );\r\n  };\r\n  renderSelect = (name, label, options) => {\r\n    // same thing as render Input but dropdown List (personally I dont think I need errors for this\r\n    //method (maybe I'm wrong))\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        errors={errors[name]}\r\n      />\r\n    );\r\n  };\r\n  renderButton = (label) => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"./../services/movieService\";\r\nimport { getGenres } from \"./../services/genreService\";\r\nclass MoviesForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    // việc đề cập genres ở đây là cho cái renderSelect (là 1 dropdownList với các genres)\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genres\"),\r\n    numberInStock: Joi.number()\r\n      .integer()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .min(0)\r\n      .max(10)\r\n      .required()\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async populateGenre() {\r\n    const { data: genres } = await getGenres();\r\n    // first time re-render\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n      const { data: movie } = await getMovie(movieId);\r\n      // second time re-render with properties of the movie object\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.populateGenre();\r\n    await this.populateMovie();\r\n  }\r\n  // the purpose of this method is to display data specifically of logic Form. We all know that\r\n  // our database is for general purpose. Therefore, to display data at logic Form, We need a method\r\n  // at which we create an object with the same properties of data at the state\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n  doSubmit = async () => {\r\n    // save a new movie and push it into a movies array\r\n    await saveMovie(this.state.data);\r\n    //after that, redirect to /movies\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Daily Rental Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesForm;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from '../services/authService';\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    // Call a server\r\n    try {\r\n      const {data} = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const {state} = this.props.location;\r\n      window.location = state ? state.from.pathname: '/';\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = {...this.state.errors};\r\n        errors.username = ex.response.data;\r\n        this.setState({errors});\r\n      }\r\n      \r\n    }\r\n  };\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to='/' />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndPoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    });\r\n}\r\n\r\nexport default {\r\n    register,\r\n}","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from '../services/authService';\r\nimport userService from '../services/userService';\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .email({ minDomainSegments: 2, tlds: { allow: [\"com\", \"net\"] } })\r\n      .label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers['x-auth-token']);\r\n      window.location = '/';\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = {...this.state.errors};\r\n        errors.username = ex.response.data;\r\n        this.setState({errors});\r\n      }\r\n      \r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        auth.logout(); \r\n        window.location = '/';\r\n    }\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import React, { Component } from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport auth from '../../services/authService';\r\n\r\nclass ProtectedRoute extends Component {\r\n    render() { \r\n        const {path, component: Component, render, ...rest} = this.props;\r\n        return ( \r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            if (!auth.getCurrentUser()) return <Redirect to={{\r\n                pathname: '/login',\r\n                state: {from: props.location }\r\n            }} />;\r\n            return Component? <Component {...props} />: render(props);\r\n          }} />);\r\n    }\r\n}\r\n \r\nexport default ProtectedRoute;","import React, { Component } from \"react\";\nimport Movies from \"./components/movies\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MoviesForm from \"./components/moviesForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from './components/logout';\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from './services/authService';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({user})\n  }\n  render() {\n    const {user} = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <ProtectedRoute path=\"/movies/:id\" component={MoviesForm} />\n            <Route path=\"/movies\" render={props => <Movies {...props} user={user} />} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}